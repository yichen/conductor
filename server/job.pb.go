// Code generated by protoc-gen-go. DO NOT EDIT.
// source: job.proto

/*
Package server is a generated protocol buffer package.

It is generated from these files:
	job.proto

It has these top-level messages:
	Job
*/
package server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Job struct {
	Workflow string `protobuf:"bytes,1,opt,name=workflow" json:"workflow,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	State    string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Data     string `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Job) GetWorkflow() string {
	if m != nil {
		return m.Workflow
	}
	return ""
}

func (m *Job) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Job) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Job) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Job)(nil), "server.Job")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for JobService service

type JobServiceClient interface {
	// Add a new job
	AddJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) AddJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := grpc.Invoke(ctx, "/server.JobService/AddJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for JobService service

type JobServiceServer interface {
	// Add a new job
	AddJob(context.Context, *Job) (*Job, error)
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_AddJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).AddJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.JobService/AddJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).AddJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddJob",
			Handler:    _JobService_AddJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job.proto",
}

func init() { proto.RegisterFile("job.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0xca, 0x4f, 0xd2,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0x52, 0x8a, 0xe7,
	0x62, 0xf6, 0xca, 0x4f, 0x12, 0x92, 0xe2, 0xe2, 0x28, 0xcf, 0x2f, 0xca, 0x4e, 0xcb, 0xc9, 0x2f,
	0x97, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x85, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73,
	0x53, 0x25, 0x98, 0xc0, 0xe2, 0x60, 0xb6, 0x90, 0x08, 0x17, 0x6b, 0x71, 0x49, 0x62, 0x49, 0xaa,
	0x04, 0x33, 0x58, 0x10, 0xc2, 0x01, 0xa9, 0x4c, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x81, 0xa8, 0x04,
	0xb1, 0x8d, 0x8c, 0xb8, 0xb8, 0xbc, 0xf2, 0x93, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85,
	0x54, 0xb8, 0xd8, 0x1c, 0x53, 0x52, 0x40, 0x36, 0x72, 0xeb, 0x41, 0x5c, 0xa0, 0xe7, 0x95, 0x9f,
	0x24, 0x85, 0xcc, 0x51, 0x62, 0x48, 0x62, 0x03, 0xbb, 0xd1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x10, 0xb5, 0x3d, 0xbe, 0xb0, 0x00, 0x00, 0x00,
}
